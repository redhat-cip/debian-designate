From: Artom Lifshitz <artom.lifshitz@enovance.com>
Date: Fri, 22 Nov 2013 20:09:19 +0000
Subject: support-old-webtest

---
 designate/tests/__init__.py |    1 +
 designate/tests/patches.py  |   48 +++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 49 insertions(+)
 create mode 100644 designate/tests/patches.py

diff --git a/designate/tests/__init__.py b/designate/tests/__init__.py
index 4013bd2..a7616da 100644
--- a/designate/tests/__init__.py
+++ b/designate/tests/__init__.py
@@ -19,6 +19,7 @@ import functools
 import os
 from testtools import testcase
 from oslo.config import cfg
+from designate.tests import patches # flake8: noqa
 from designate.openstack.common import log as logging
 from designate.openstack.common.notifier import test_notifier
 from designate.openstack.common.fixture import config
diff --git a/designate/tests/patches.py b/designate/tests/patches.py
new file mode 100644
index 0000000..c60543d
--- /dev/null
+++ b/designate/tests/patches.py
@@ -0,0 +1,48 @@
+# Copyright 2013 Hewlett-Packard Development Company, L.P.
+#
+# Author: Kiall Mac Innes <kiall@hp.com>
+#
+# Licensed under the Apache License, Version 2.0 (the "License"); you may
+# not use this file except in compliance with the License. You may obtain
+# a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+# License for the specific language governing permissions and limitations
+# under the License.
+
+
+try:
+    from webtest.compat import dumps
+    import webtest
+
+    class TestApp(webtest.TestApp):
+        def patch(self, url, params='', headers=None, extra_environ=None,
+                  status=None, upload_files=None, expect_errors=False,
+                  content_type=None):
+                return self._gen_request('PATCH', url, params=params,
+                                         headers=headers,
+                                         extra_environ=extra_environ,
+                                         status=status,
+                                         upload_files=upload_files,
+                                         expect_errors=expect_errors,
+                                         content_type=content_type)
+
+        def patch_json(self, url, params='', headers=None, extra_environ=None,
+                       status=None, expect_errors=False):
+            content_type = 'application/json'
+            if params:
+                params = dumps(params)
+            return self._gen_request('PATCH', url, params=params, headers=headers,
+                                     extra_environ=extra_environ, status=status,
+                                     upload_files=None,
+                                     expect_errors=expect_errors,
+                                     content_type=content_type)
+
+
+    webtest.TestApp = TestApp
+except ImportError:
+    pass
-- 
